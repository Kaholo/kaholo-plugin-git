{
  "name": "Git",
  "viewName": "Git",
  "type": "executer",
  "execProgram": "node",
  "main": "app.js",
  "imgUrl": "logo.png",
  "version": "2.4.5",
  "description": "Kaholo plugin for integration with Git",
  "category": "SOURCE CONTROL",
  "keywords": [
    "code",
    "dev",
    "developer",
    "repo",
    "repository",
    "package",
    "version",
    "cloud"
  ],
  "settings": [
    {
      "name": "sshKey",
      "viewName": "SSH Key",
      "type": "vault",
      "description": "SSH key to be used as the default SSH key to authenticate to GitHub with.",
      "placeholder": "ddQ6/B6wxV2OaN0m8EeMuz0deCmbayVX+n5k7Z5LfPO",
      "learnUrl": "https://docs.github.com/en/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent"
    }
  ],
  "methods": [
    {
      "name": "cloneUsingSsh",
      "viewName": "Clone private repository",
      "params": [
        {
          "name": "sshKey",
          "viewName": "SSH Key",
          "type": "vault",
          "required": false,
          "description": "SSH key taken from the vault items.",
          "learnUrl": "https://git-scm.com/book/en/v2/Git-on-the-Server-Generating-Your-SSH-Public-Key"
        },
        {
          "name": "username",
          "viewName": "Username",
          "type": "string",
          "required": false,
          "description": "Username with access rights to the repository.",
          "placeholder": "myusername"
        },
        {
          "name": "password",
          "viewName": "Password",
          "type": "vault",
          "required": false,
          "description": "For authentication with username and password, instead of SSH key."
        },
        {
          "name": "repo",
          "viewName": "Repository",
          "type": "string",
          "required": true,
          "description": "The repository git or HTTPS URL.",
          "placeholder": "git@github.com:Kaholo/kaholo-plugin-git.git",
          "learnUrl": "https://git-scm.com/book/en/v2/Git-Basics-Working-with-Remotes"
        },
        {
          "name": "branch",
          "viewName": "Branch",
          "type": "string",
          "required": false,
          "description": "The branch of the repository.",
          "placeholder": "main",
          "learnUrl": "https://git-scm.com/book/en/v2/Git-Branching-Branches-in-a-Nutshell"
        },
        {
          "name": "path",
          "viewName": "Clone Path",
          "type": "string",
          "required": true,
          "description": "Folder path for the cloned repository.",
          "placeholder": "/home/user/clone_path/",
          "learnUrl": "https://git-scm.com/docs/git-clone"
        },
        {
          "name": "extraArgs",
          "viewName": "Additional Arguments",
          "type": "text",
          "required": false,
          "description": "Add arguments to the git command.",
          "placeholder": "--quiet",
          "learnUrl": "https://git-scm.com/docs/git-clone"
        },
        {
          "name": "overwrite",
          "viewName": "Overwrite If Exists",
          "type": "boolean",
          "description": "Overwriting the clone onto the provided path.",
          "learnUrl": "https://git-scm.com/docs/git-clone",
          "placeholder": "true/false"
        },
        {
          "name": "saveCreds",
          "viewName": "Save Credentials",
          "type": "boolean",
          "description": "Saving the SSH key for the usage of pull/push/tag/add/commit.",
          "learnUrl": "https://git-scm.com/book/en/v2/Git-on-the-Server-Setting-Up-the-Server",
          "placeholder": "e.g."
        }
      ]
    },
    {
      "name": "clonePublic",
      "viewName": "Clone public repository",
      "params": [
        {
          "name": "repo",
          "viewName": "Repository",
          "type": "string",
          "required": true,
          "description": "The repository shared URL.",
          "placeholder": "git://host.xz[:port]/path/to/repo.git/",
          "learnUrl": "https://git-scm.com/book/en/v2/Git-Basics-Working-with-Remotes"
        },
        {
          "name": "branch",
          "viewName": "Branch",
          "type": "string",
          "required": false,
          "description": "The branch of the repository.",
          "placeholder": "main",
          "learnUrl": "https://git-scm.com/book/en/v2/Git-Branching-Branches-in-a-Nutshell"
        },
        {
          "name": "path",
          "viewName": "Clone Path",
          "type": "string",
          "required": true,
          "description": "Folder path for the cloned repository.",
          "placeholder": "/home/user/clone_path/",
          "learnUrl": "https://git-scm.com/docs/git-clone"
        },
        {
          "name": "extraArgs",
          "viewName": "Additional Arguments",
          "type": "text",
          "required": false,
          "description": "Add arguments to the git command.",
          "placeholder": "--quiet",
          "learnUrl": "https://git-scm.com/docs/git-clone"
        },
        {
          "name": "overwrite",
          "viewName": "Overwrite If Exists",
          "type": "boolean",
          "description": "Overwriting the clone onto the provided path.",
          "learnUrl": "https://git-scm.com/docs/git-clone",
          "placeholder": "true/false"
        }
      ]
    },
    {
      "name": "pull",
      "viewName": "Pull",
      "params": [
        {
          "name": "path",
          "viewName": "Repository Path",
          "type": "string",
          "required": true,
          "description": "Path of the existing git repository to \"git pull\".",
          "placeholder": "/home/username/reponame/",
          "learnUrl": "https://git-scm.com/docs/git-pull"
        },
        {
          "name": "force",
          "viewName": "Force Fetch",
          "type": "boolean",
          "default": false,
          "description": "-f  When git is used with <src>:<dst> refspec it may refuse to update the local branch. This overrides that check.",
          "learnUrl": "https://git-scm.com/docs/git-pull"
        },
        {
          "name": "commitMerge",
          "viewName": "Commit Merge",
          "type": "boolean",
          "default": true,
          "description": "--commit, perform a commit if the merge succeeds (default git behavior)",
          "learnUrl": "https://git-scm.com/docs/git-pull"
        },
        {
          "name": "extraArgs",
          "viewName": "Additional Arguments",
          "type": "text",
          "required": false,
          "description": "Any additional arguments you wish to pass to /usr/bin/git.",
          "learnUrl": "https://git-scm.com/docs/git-pull",
          "placeholder": "--dry-run --tags"
        }
      ]
    },
    {
      "name": "pushTag",
      "viewName": "Push Tag",
      "params": [
        {
          "name": "path",
          "viewName": "Repository Path",
          "type": "string",
          "description": "Path of the folder that will contain the pulled git repository.",
          "placeholder": "/home/username/path/",
          "learnUrl": "https://git-scm.com/docs/git-pull"
        },
        {
          "name": "username",
          "viewName": "Username",
          "type": "string",
          "description": "Username with access rights to the repository.",
          "placeholder": "myusername",
          "learnUrl": "https://docs.docker.com/engine/reference/commandline/image_pull/"
        },
        {
          "name": "email",
          "viewName": "Email",
          "type": "string",
          "description": "Email address of the authorised user.",
          "placeholder": "my@email.com",
          "learnUrl": "https://git-scm.com/book/en/v2/Appendix-C:-Git-Commands-Email"
        },
        {
          "name": "tagName",
          "viewName": "Tag Name",
          "type": "string",
          "description": "Tag name.",
          "learnUrl": "https://git-scm.com/book/en/Git-Basics-Tagging",
          "placeholder": "kaholo-server"
        },
        {
          "name": "message",
          "viewName": "Tag Message",
          "type": "string",
          "description": "Description to tag name",
          "placeholder": "Added new feature: ...",
          "learnUrl": "https://git-scm.com/docs/git-tag"
        },
        {
          "name": "noPush",
          "viewName": "Don't Push",
          "type": "boolean",
          "description": "If true, don't push the tag created to the remote repository.",
          "learnUrl": "https://git-scm.com/book/en/v2/Git-Basics-Tagging"
        }
      ]
    },
    {
      "name": "addCommit",
      "viewName": "Add Commit And Push",
      "params": [
        {
          "name": "path",
          "viewName": "Repository Path",
          "type": "string",
          "description": "Path of the folder that will contain the pulled git repository.",
          "placeholder": "/home/username/path/"
        },
        {
          "name": "username",
          "viewName": "Username",
          "type": "string",
          "description": "Username with access rights to the repository.",
          "placeholder": "myusername"
        },
        {
          "name": "email",
          "viewName": "Email",
          "type": "string",
          "description": "Email address of the authorised user.",
          "placeholder": "my@email.com",
          "learnUrl": "https://git-scm.com/book/en/v2/Appendix-C:-Git-Commands-Email"
        },
        {
          "name": "commitMessage",
          "viewName": "Commit Message",
          "type": "string",
          "description": "Add a message while doing the commit.",
          "placeholder": "This_is_version_5",
          "learnUrl": "https://git-scm.com/docs/git-commit"
        },
        {
          "name": "override",
          "viewName": "Override Add Argumants",
          "type": "text",
          "description": "Add arguments to the commit command.",
          "placeholder": "[-a | --interactive | --patch]",
          "learnUrl": "https://git-scm.com/docs/git-push"
        },
        {
          "name": "noPush",
          "viewName": "Don't Push",
          "type": "boolean",
          "description": "Do not push the created tag to the remote repository.",
          "learnUrl": "https://git-scm.com/docs/git-push",
          "placeholder": "true/false"
        }
      ]
    },
    {
      "name": "remove",
      "viewName": "Remove And Clean Repository",
      "params": [
        {
          "name": "path",
          "viewName": "Repository Path",
          "type": "string",
          "description": "Path of the folder that will contain the git repository to delete.",
          "placeholder": "/home/username/path/",
          "learnUrl": "https://git-scm.com/docs/git-clean"
        }
      ]
    }
  ]
}
